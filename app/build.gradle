apply plugin: 'com.android.application'


android {

    lintOptions {
        disable 'UnusedResources'
    }

    compileSdkVersion 27

    defaultConfig {
        applicationId "de.yafp.gimmepassword"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 6
        versionName "1.1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.google.firebase:firebase-core:15.0.0'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

apply plugin: 'com.google.gms.google-services'







// Attempt to auto-generate javadocs while building
//
// running:
//      ./gradlew createJavadocs
//
// results in a javadoc folder in:
//      app\build\docs
//
// via:
// https://www.stkent.com/2016/01/28/adventures-with-javadocs-part-1.html
//
task createJavadocs  (type: Javadoc) {
    source = project.android.sourceSets.main.java.srcDirs
    options.linkSource true
    classpath += project.files(project.android.getBootClasspath().join(File.pathSeparator))
    failOnError false
    //
    //destinationDir = projectDir
    destinationDir = file("$rootDir/doc/Javadoc")
}

// unsure how to use this
// idea is to automatically run the task after build
build.finalizedBy(createJavadocs)